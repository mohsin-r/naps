import{bR as o,jO as g,c_ as l,cj as c,T as a,c as p,d as m,j as n}from"./main-C9wvg2yZ.js";import{X as d,Y as u}from"./LayerView-DONYuvqR-ZiJmHcF4.js";import{d as w}from"./GraphicContainer-DPQzFmqj-C2nGYwgW.js";import{X as y}from"./GraphicsView2D-DGP_h330-rX0Hs_lp.js";import{i as V}from"./HighlightCounter-DFWq7PnG-L3ompOf4.js";import"./Container-C-rqKhNk-Y6XdmyFT.js";import"./layerViewUtils-DyE3oc1e-DmCp0z_P.js";import"./AGraphicContainer-aPpZ1eAs-w60f44PJ.js";import"./TechniqueInstance-DBGJNG3B-D3F1kTlN.js";import"./UpdateTracking2D-swFQJIjy-PsuRNY_N.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./GeometryUtils-v59R1Z6F-DI0krx0P.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./LabelMetric-DpMX58iW-D67UR9sr.js";import"./Program-1XjJitsM-B-Cy_0BT.js";import"./BufferObject-DqJSjWFs-ClcZpGmd.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BindType-9iOk18Ed-CRW1cdX4.js";import"./Util-cAlFLh9R-BeELI0ae.js";import"./TileContainer-C5yGwaDr-GfYzgAhF.js";import"./WGLContainer-whJgsi2t-BF6_cD8T.js";import"./VertexArrayObject-C4kjI814-DFF5idN_.js";import"./ProgramTemplate-B_NcbdFz-nx7i8elE.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./StyleDefinition-CovmM7Ch-Df3rdxm5.js";import"./config-nuMERBvb-MDUrh2eL.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./FeatureCommandQueue-F8dH-mVd-BJJIFWTK.js";import"./constants-Bqe1QJ4u-F8oTIn7N.js";import"./AttributeStore-BysBgiw_-C1KcuZBH.js";import"./TimeOnly-BR6daUyu-B1wD7NWs.js";import"./timeSupport-sB9XTwIv-CSUIdR73.js";import"./normalizeUtilsSync-BGR0Mvo7-BFU4XR_K.js";let s=class extends d(u){constructor(){super(...arguments),this._highlightCounter=new V}attach(){this.graphicsView=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new w(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let e;typeof i=="number"?e=[i]:i instanceof g?e=[i.uid]:Array.isArray(i)&&i.length>0?e=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):l.isCollection(i)&&i.length>0&&(e=i.map(r=>r&&r.uid).toArray());const h=e?.filter(c);return h?.length?(this._addHighlight(h,t),a(()=>this._removeHighlight(h,t))):a()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){const i=[];for(const t of this._highlightCounter.ids()){const e=this._highlightCounter.getHighlightGroups(t),h=this._getHighlightBits(e);i.push({objectId:t,highlightFlags:h})}this.graphicsView?.setHighlight(i)}};p([m()],s.prototype,"graphicsView",void 0),s=p([n("esri.views.2d.layers.GraphicsLayerView2D")],s);const W=s;export{W as default};
