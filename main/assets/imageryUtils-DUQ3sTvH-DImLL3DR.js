import{C as m,D as o}from"./utils-2iHN6TbU-nMn77vT3.js";import{jU as c,jV as p,jW as i,jY as u}from"./main-B2UX4EBG.js";import"./originUtils-BLsWtgV9-B4sclfuf.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./jsonContext-v1mRP0aL-BIlCitQ5.js";import"./saveUtils-BQy3eBhU-0DFvUEM1.js";const s="Image Service",v="imagery-layer-save",g="imagery-layer-save-as",f="imagery-tile-layer-save",d="imagery-tile-layer-save-as";function y(t){if(t.type==="imagery")return{isValid:!0};const{raster:e}=t,a=e?.datasetFormat==="Function"?e.primaryRasters?.rasters[0]:e;return{isValid:a?.datasetFormat==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function n(t){const e=t.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function T(t,e){const{parsedUrl:a,title:r,fullExtent:l}=t;e.url=a.path,e.title||=r;try{e.extent=await c(l)}catch{e.extent=void 0}p(e,i.METADATA),u(e,i.TILED_IMAGERY,t.type==="imagery-tile")}async function h(t,e){const a=t.type==="imagery"?v:f;return m({layer:t,itemType:s,validateLayer:y,createItemData:n,errorNamePrefix:a},e)}async function E(t,e,a){const r=t.type==="imagery"?g:d;return o({layer:t,itemType:s,validateLayer:y,createItemData:n,errorNamePrefix:r,newItem:e,setItemProperties:T},a)}export{h as save,E as saveAs};
