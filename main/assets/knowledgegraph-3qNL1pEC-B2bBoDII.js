const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./knowledgeGraphService-BTB1M7Gx-CuUlkDaP.js","./main-B2UX4EBG.js","./main-B0BSaEIx.css","./GraphQueryStreaming-U8ctbyJL-Bmb3sK2r.js"])))=>i.map(i=>d[i]);
import{ae as _,b as D,H as N,i8 as E,i9 as O,ia as V,aj as P,cZ as C,Y as I,m9 as H,l5 as M}from"./main-B2UX4EBG.js";import{t as J,N as T}from"./arcadeUtils-BUv04XWE-D3W0vzK-.js";import{v as b,T as l,n as p,M as k,y as w,H as L,g as Q,C as S,e as U,S as G,d as W,c as $,h as K,a as X,O as j,ak as Y}from"./languageUtils-Bxl5LDSi-DMXjBiZx.js";import{e as Z}from"./portalUtils-BNrT8D9R-BYCAP2Hi.js";import{p as z,j as B}from"./project-NnYH-8_O-BntozESH.js";import{x as nn,w as tn,b as en,g as rn,j as an}from"./GraphQueryStreaming-U8ctbyJL-Bmb3sK2r.js";import"./TimeOnly-BR6daUyu-BIYLNjHv.js";import"./ImmutableArray-CiJxhY8_-Kqx7aWRu.js";import"./number-BJi_xsDz-DkvVhX73.js";import"./shared-CWBqh2zd-MNGrMOiQ.js";let u=null;async function on(n){const t=N.geometryServiceUrl??"";if(!t){E()||await O();for(const e of n)e.container[e.indexer]=V(e.container[e.indexer],P.WGS84);return}const r=n.map(e=>e.container[e.indexer]),i=new z({geometries:r,outSpatialReference:P.WGS84}),s=await B(t,i);for(let e=0;e<s.length;e++){const a=n[e];a.container[a.indexer]=s[e]}}async function A(n,t){const r=new C({portal:n,id:t});return await r.load(),u===null&&(u=await D(()=>import("./knowledgeGraphService-BTB1M7Gx-CuUlkDaP.js"),__vite__mapDeps([0,1,2,3]),import.meta.url).then(i=>i.k)),await u.fetchKnowledgeGraph(r.url)}function R(n,t,r,i,s){if(n===null)return null;if(w(n)||G(n))return n;if(W(n)||W(n))return n.toJSDate();if($(n))return n.toStorageFormat();if(K(n))return n.toStorageString();if(X(n)){const e={};for(const a of n.keys())e[a]=R(n.field(a),t,r,i,s),e[a]instanceof I&&s.push({container:e,indexer:a});return e}if(S(n)){const e=n.map(a=>R(a,t,r,i,s));for(let a=0;a<e.length;a++)e[a]instanceof I&&s.push({container:e,indexer:a});return e}return j(n)?n.spatialReference.isWGS84?n:n.spatialReference.isWebMercator&&t?H(n):n:void 0}function sn(n,t){if(!n)return n;if(n.spatialReference.isWGS84&&t.spatialReference.isWebMercator)return M(n);if(n.spatialReference.equals(t.spatialReference))return n;throw new l(t,p.WrongSpatialReference,null)}function v(n,t){if(!n)return null;const r={};for(const i in n)r[i]=m(n[i],t);return r}function m(n,t){return n===null?null:S(n)?n.map(r=>m(r,t)):n instanceof tn?{graphTypeName:n.typeName,id:n.id,graphType:"entity",properties:v(n.properties,t)}:n instanceof en?{graphType:"object",properties:v(n.properties,t)}:n instanceof rn?{graphTypeName:n.typeName,id:n.id,graphType:"relationship",originId:n.originId??null,destinationId:n.destinationId??null,properties:v(n.properties,t)}:n instanceof an?{graphType:"path",path:n.path?n.path.map(r=>m(r,t)):null}:j(n)?sn(n,t):w(n)||G(n)||Y(n)?n:null}function yn(n){n.mode==="async"&&(n.functions.knowledgegraphbyportalitem=function(t,r){return n.standardFunctionAsync(t,r,(i,s,e)=>{if(b(e,2,2,t,r),e[0]===null)throw new l(t,p.PortalRequired,r);if(e[0]instanceof J){const d=k(e[1]);let f;return f=t.services?.portal?t.services.portal:_.getDefault(),A(Z(e[0],f),d)}if(w(e[0])===!1)throw new l(t,p.InvalidParameter,r);const a=k(e[0]);return A(t.services?.portal??_.getDefault(),a)})},n.signatures.push({name:"knowledgegraphbyportalitem",min:2,max:2}),n.functions.querygraph=function(t,r){return n.standardFunctionAsync(t,r,async(i,s,e)=>{b(e,2,4,t,r);const a=e[0];if(!L(a))throw new l(t,p.InvalidParameter,r);const d=e[1];if(!w(d))throw new l(t,p.InvalidParameter,r);u===null&&(u=await D(()=>import("./knowledgeGraphService-BTB1M7Gx-CuUlkDaP.js"),__vite__mapDeps([0,1,2,3]),import.meta.url).then(o=>o.k));let f=null;const h=Q(e[2],null);if(!(h instanceof T||h===null))throw new l(t,p.InvalidParameter,r);if(h){let o=[];f=R(h,!0,!1,t,o),o=o.filter(c=>!c.container[c.indexer].spatialReference.isWGS84),o.length>0&&await on(o)}const x=new nn({openCypherQuery:d,bindParameters:f});(a?.serviceDefinition?.currentVersion??11.3)>11.2&&(x.outputSpatialReference=t.spatialReference);const q=(await u.executeQueryStreaming(a,x)).resultRowsStream.getReader(),y=[];try{for(;;){const{done:o,value:c}=await q.read();if(o)break;if(S(c))for(const g of c)y.push(m(g,t));else{const g=[];for(const F of c)g.push(m(c[F],t));y.push(g)}}}catch(o){throw o}return T.convertJsonToArcade(y,U(t),!1,!0)})},n.signatures.push({name:"querygraph",min:2,max:4}))}export{yn as registerFunctions};
