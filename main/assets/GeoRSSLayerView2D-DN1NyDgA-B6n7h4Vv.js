import{aU as h,iB as n,ki as g,c_ as w,oq as d,or as f,os as m,c as u,j as b}from"./main-B2UX4EBG.js";import{X as V,Y as S}from"./LayerView-DONYuvqR-Bj_Al8HE.js";import{d as _}from"./GraphicContainer-DPQzFmqj-B8vOUWfl.js";import{X as T}from"./GraphicsView2D-DGP_h330-DjEcMux9.js";import"./Container-C-rqKhNk-D3F_mCcp.js";import"./layerViewUtils-DyE3oc1e-DiM-8zsX.js";import"./AGraphicContainer-aPpZ1eAs-B8YkQXBp.js";import"./TechniqueInstance-DBGJNG3B--MCSn0Jq.js";import"./UpdateTracking2D-swFQJIjy-BaZsakTc.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./GeometryUtils-v59R1Z6F-CoVPVF-X.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./LabelMetric-DpMX58iW-B-5yyl82.js";import"./Program-1XjJitsM-DNupFgb6.js";import"./BufferObject-DqJSjWFs-COKIJclw.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BindType-9iOk18Ed-CRW1cdX4.js";import"./Util-cAlFLh9R-oIQpZgxD.js";import"./TileContainer-C5yGwaDr-DZnmgKcC.js";import"./WGLContainer-whJgsi2t-isUvgAB7.js";import"./VertexArrayObject-C4kjI814-miywJgST.js";import"./ProgramTemplate-B_NcbdFz-CA7X3kS9.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./StyleDefinition-CovmM7Ch-ue8tg4hO.js";import"./config-nuMERBvb-MDUrh2eL.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./FeatureCommandQueue-F8dH-mVd-CSvl61tD.js";import"./constants-Bqe1QJ4u-F8oTIn7N.js";import"./AttributeStore-BysBgiw_-LpWqk63G.js";import"./TimeOnly-BR6daUyu-BIYLNjHv.js";import"./timeSupport-sB9XTwIv-tcVoK5A5.js";import"./normalizeUtilsSync-BGR0Mvo7-DNr_2MBi.js";let y=class extends V(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(t=>{const i=this._popupTemplates.get(t),p=t.hitTest(e);for(const s of p)s.layer=o,s.sourceLayer=o,s.popupTemplate=i;return p}).map(t=>({type:"graphic",graphic:t,layer:o,mapPoint:e}))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([h(()=>this.layer?.featureCollections,e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:t}of e){const i=g.fromJSON(o),p=new w(i.features),s=t.drawingInfo,c=r?d.fromJSON(r):null,a=f(s.renderer),l=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=l,this._popupTemplates.set(l,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}},n),h(()=>this.layer?.polygonSymbol,e=>{this._graphicsViewMap.polygon.renderer=new m({symbol:e})},n),h(()=>this.layer?.lineSymbol,e=>{this._graphicsViewMap.polyline.renderer=new m({symbol:e})},n),h(()=>this.layer?.pointSymbol,e=>{this._graphicsViewMap.point.renderer=new m({symbol:e})},n)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([b("esri.views.2d.layers.GeoRSSLayerView2D")],y);const te=y;export{te as default};
